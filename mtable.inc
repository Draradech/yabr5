//ENTRY(ID,  var,              rightshift,     resolution,    unit,    name,                                  minvalue,   maxvalue  )

ENTRY('0', attitude.voltage,          0,       0.001,         "V",     "Batteriespannung",                      10.0,      20.0      )
ENTRY('1', attitude.accX,             4,       0.0001,        "m/ss",  "Beschleunigung X",                    -19.62,     19.62     )
ENTRY('2', attitude.accY,             4,       0.0001,        "m/ss",  "Beschleunigung Y",                    -19.62,     19.62     )
ENTRY('3', attitude.accZ,             4,       0.0001,        "m/ss",  "Beschleunigung Z",                    -19.62,     19.62     )
ENTRY('4', attitude.angleRateX,       8,       0.0001,        "°/s",   "Winkelgeschwindigkeit X",            -500.0,     500.0      )
ENTRY('5', attitude.angleRateY,       8,       0.0001,        "°/s",   "Winkelgeschwindigkeit Y",            -500.0,     500.0      )
ENTRY('6', attitude.angleRateZ,       8,       0.0001,        "°/s",   "Winkelgeschwindigkeit Z",            -500.0,     500.0      )
ENTRY('7', attitude.angleAcc,         7,       0.0001,        "°",     "Winkel ACC",                          -90.0,      90.0      )
ENTRY('8', attitude.angleGyro,        7,       0.0001,        "°",     "Winkel Gyro",                         -90.0,      90.0      )
ENTRY('9', attitude.angleFused,       7,       0.0001,        "°",     "Winkel Fused",                        -90.0,      90.0      )
ENTRY('q', attitude.temperature,      0,       0.01,          "°C",    "Temperatur",                            0.0,     100.0      )
ENTRY('w', attitude.speedLeft,        0,       0.001,         "m/s",   "Geschw Links",                         -2.0,       2.0      )
ENTRY('e', attitude.speedRight,       0,       0.001,         "m/s",   "Geschw Rechts",                        -2.0,       2.0      )
ENTRY('r', attitude.speed,            0,       0.001,         "m/s",   "Geschw",                               -2.0,       2.0      )
ENTRY('t', attitude.position,         0,       0.001,         "m",     "Position",                             -2.0,       2.0      )
ENTRY('z', attitude.diffSide,         0,       0.001,         "m",     "Diff RL",                              -0.5,       0.5      )
ENTRY('u', lastLoopTicks,             0,       1.0,           "%",     "Prozessorauslastung",                   0.0,     100.0      )
ENTRY('i', rawSensorData.voltage,     0,       1.0,           "",      "Raw Batteriespannung",                  0.0,     949.2      )
ENTRY('o', rawSensorData.angleRateX,  0,       1.0,           "",      "Raw Winkelgeschwindigkeit X",      -32768.0,   32768.0      )
ENTRY('p', rawSensorData.angleRateY,  0,       1.0,           "",      "Raw Winkelgeschwindigkeit Y",      -32768.0,   32768.0      )
ENTRY('a', rawSensorData.angleRateZ,  0,       1.0,           "",      "Raw Winkelgeschwindigkeit Z",      -32768.0,   32768.0      )
ENTRY('s', rawSensorData.accX,        0,       1.0,           "",      "Raw Beschleunigung X",             -32768.0,   32768.0      )
ENTRY('d', rawSensorData.accY,        0,       1.0,           "",      "Raw Beschleunigung Y",             -32768.0,   32768.0      )
ENTRY('f', rawSensorData.accZ,        0,       1.0,           "",      "Raw Beschleunigung Z",             -32768.0,   32768.0      )
ENTRY('g', rawSensorData.temperature, 0,       1.0,           "",      "Raw Temperatur",                        0.0,      50.0      )
ENTRY('h', rawSensorData.wssLeft,     0,       1.0,           "",      "Raw WSS Links",                      -100.0,     100.0      )
ENTRY('j', rawSensorData.wssRight,    0,       1.0,           "",      "Raw WSS Rechts",                     -100.0,     100.0      )
ENTRY('k', rawSensorData.position,    0,       1.0,           "",      "Raw Position",                     -10000.0,   10000.0      )
ENTRY('l', rawSensorData.diffSide,    0,       1.0,           "",      "Raw Pos Diff",                     -10000.0,   10000.0      )
ENTRY('y', actuator.powerLeft,        0,       1.0,           "",      "Power Left",                         -256.0,     256.0      )
ENTRY('x', actuator.powerRight,       0,       1.0,           "",      "Power Right",                        -256.0,     256.0      )
ENTRY('c', ultra[0],                  0,       1.0,           "",      "ultra center",                          0.0,    5000.0      )
ENTRY('v', ultra[1],                  0,       1.0,           "",      "ultra right",                           0.0,    5000.0      )
ENTRY('b', ultra[2],                  0,       1.0,           "",      "ultra left",                            0.0,    5000.0      )
ENTRY('n', override,                  0,       1.0,           "",      "override",                              0.0,    1000.0      )
ENTRY(0,   lastLoopTicks,             0,       0.0,           "-",     "Ende der Tabelle",                      0.0,       0.0      )
